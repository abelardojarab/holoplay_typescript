{"version":3,"file":"Holoplay.js","sourceRoot":"","sources":["../Holoplay.ts"],"names":[],"mappings":"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","sourcesContent":["class TextureQuality {\r\n  public static VERY_LOW:number = 0; //512\r\n  public static LOW:number = 1;       //1024\r\n  public static MEDIUM:number = 2;    //2048\r\n  public static HIGH:number = 3;      //4096\r\n  public static VERY_HIGH:number = 4; //8192\r\n}\r\n\r\nclass ViewQuality {\r\n  public static VERY_LOW:number = 0;  //4x4\r\n  public static LOW:number = 1;       //5x5\r\n  public static MEDIUM:number = 2;    //6x6\r\n  public static HIGH:number = 3;      //7x7\r\n  public static VERY_HIGH:number = 4; //8x8\r\n}\r\n\r\nclass HoloPlay {\r\n\r\n  public scene:THREE.Scene;\r\n  public camera:THREE.PerspectiveCamera;\r\n  public renderer:THREE.WebGLRenderer;\r\n\r\n  protected finalRenderScene:THREE.Scene;\r\n  protected finalRenderCamera:THREE.Camera;\r\n\r\n  public multiViewRenderer:HoloMultiViewRenderer;\r\n  public eppRom:HoloEppRom;\r\n  public screen:HoloScreen;\r\n\r\n  private useBorderInFullscreen:boolean = false;\r\n  private fullscreenBorderSize:number = 100;\r\n  private useEppRom:boolean;\r\n\r\n\r\n  constructor(scene:THREE.Scene,camera:THREE.PerspectiveCamera,renderer:THREE.WebGLRenderer,useEppRom:boolean=true){\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.renderer = renderer;\r\n    this.useEppRom = useEppRom;\r\n  }\r\n\r\n\r\n  public init(textureQuality:number = TextureQuality.HIGH,viewQuality:number = ViewQuality.MEDIUM):void{\r\n\r\n    this.finalRenderScene = new THREE.Scene();\r\n    this.finalRenderCamera = new THREE.OrthographicCamera(-0.5,0.5,0.5,-0.5,0.001,300000);\r\n    this.finalRenderCamera.position.z = 2;\r\n\r\n\r\n\r\n    var textureSize = Math.pow(2,9 + textureQuality);\r\n    var nb = 4 + viewQuality;\r\n\r\n    this.multiViewRenderer = new HoloMultiViewRenderer(this,textureSize/nb,textureSize/nb,nb,nb);\r\n    this.screen = new HoloScreen(this);\r\n\r\n    this.finalRenderScene.add(this.finalRenderCamera);\r\n    this.finalRenderScene.add(this.screen);\r\n\r\n    if(this.useEppRom) this.eppRom = new HoloEppRom(this);\r\n    else this.initScreen(false);\r\n\r\n  }\r\n\r\n\r\n  public initScreen(useEppRom:boolean=true):void{\r\n    this.useEppRom = useEppRom;\r\n    this.screen.init(this.DPI, this.pitch, this.slope,  this.center);\r\n  }\r\n\r\n  public get ready():boolean{return  (this.useEppRom == false) || this.eppRom.initialized}\r\n\r\n  public get DPI():number{\r\n    if(this.useEppRom) return this.eppRom.jsonObj.DPI.value;\r\n    else return 338;\r\n  }\r\n  public get slope():number{\r\n    if(this.useEppRom) return this.eppRom.jsonObj.slope.value;\r\n    else return -5.392934799194336\r\n  }\r\n  public get pitch():number{\r\n    if(this.useEppRom) return this.eppRom.jsonObj.pitch.value;\r\n    else return 47.58308029174805;\r\n\r\n  }\r\n\r\n\r\n  public get center():number{\r\n    if(this.useEppRom) return this.eppRom.jsonObj.center.value;\r\n    else return -0.028532594442367554;\r\n  }\r\n\r\n\r\n  public get depthRatio():number{return this.screen.depthRatio;}\r\n  public set depthRatio(n:number){ this.screen.depthRatio = n}\r\n\r\n  public onResize():void{\r\n    this.renderer.setSize(window.innerWidth,window.innerHeight);\r\n    this.camera.aspect = window.innerWidth/window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n    this.screen.updateViewConePitchAndTilt();\r\n  }\r\n\r\n  public useBlackBorderAroundFullscreen(borderSize:number=100){\r\n    this.useBorderInFullscreen = true;\r\n    this.fullscreenBorderSize = borderSize;\r\n  }\r\n\r\n  public update():void{\r\n\r\n    this.multiViewRenderer.captureViews();\r\n\r\n    if(document[\"fullscreen\"] && this.useBorderInFullscreen && window.innerWidth == 2560 && window.innerHeight == 1600){\r\n      this.renderer.setScissorTest(true);\r\n      var size = this.fullscreenBorderSize;\r\n      this.renderer.setScissor(size,size,2560-size*2,1600-size*2)\r\n    }else{\r\n      this.renderer.setScissorTest(false);\r\n    }\r\n\r\n    this.renderer.render(this.finalRenderScene,this.finalRenderCamera);\r\n  }\r\n\r\n\r\n}\r\n"]}